<?php

/**
 * This is the model base class for the table "wp_users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Users".
 *
 * Columns in table "wp_users" available as properties of the model,
 * followed by relations of table "wp_users" available as properties of the model.
 *
 * @property string $ID
 * @property string $user_login
 * @property string $user_pass
 * @property string $user_nicename
 * @property string $user_email
 * @property string $user_url
 * @property string $user_registered
 * @property string $user_activation_key
 * @property integer $user_status
 * @property string $display_name
 *
 * @property Foundbox[] $foundboxes
 */
abstract class BaseUsers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'wp_users';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Users|Users', $n);
	}

	public static function representingColumn() {
		return 'user_login';
	}

	public function rules() {
		return array(
			array('user_status', 'numerical', 'integerOnly'=>true),
			array('user_login, user_activation_key', 'length', 'max'=>60),
			array('user_pass', 'length', 'max'=>64),
			array('user_nicename', 'length', 'max'=>50),
			array('user_email, user_url', 'length', 'max'=>100),
			array('display_name', 'length', 'max'=>250),
			array('user_registered', 'safe'),
			array('user_login, user_pass, user_nicename, user_email, user_url, user_registered, user_activation_key, user_status, display_name', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ID, user_login, user_pass, user_nicename, user_email, user_url, user_registered, user_activation_key, user_status, display_name', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'foundboxes' => array(self::HAS_MANY, 'Foundbox', 'wp_users_ID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ID' => Yii::t('app', 'ID'),
			'user_login' => Yii::t('app', 'User Login'),
			'user_pass' => Yii::t('app', 'User Pass'),
			'user_nicename' => Yii::t('app', 'User Nicename'),
			'user_email' => Yii::t('app', 'User Email'),
			'user_url' => Yii::t('app', 'User Url'),
			'user_registered' => Yii::t('app', 'User Registered'),
			'user_activation_key' => Yii::t('app', 'User Activation Key'),
			'user_status' => Yii::t('app', 'User Status'),
			'display_name' => Yii::t('app', 'Display Name'),
			'foundboxes' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ID', $this->ID, true);
		$criteria->compare('user_login', $this->user_login, true);
		$criteria->compare('user_pass', $this->user_pass, true);
		$criteria->compare('user_nicename', $this->user_nicename, true);
		$criteria->compare('user_email', $this->user_email, true);
		$criteria->compare('user_url', $this->user_url, true);
		$criteria->compare('user_registered', $this->user_registered, true);
		$criteria->compare('user_activation_key', $this->user_activation_key, true);
		$criteria->compare('user_status', $this->user_status);
		$criteria->compare('display_name', $this->display_name, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}